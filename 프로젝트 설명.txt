📌 프로젝트: 출퇴근 교통 혼잡 분석 시스템
1. 프로젝트 개요

도시의 출퇴근 시간에는 특정 구간에서 교통 정체가 심각하게 발생합니다.
기존 교통 서비스들은 단순히 “혼잡/원활” 정도의 정보만 제공하기 때문에,
실제 언제 출발하면 가장 덜 막히는지 알기 어렵습니다.

이에 따라 공공 교통 CCTV 데이터를 활용해 차량을 실시간으로 분석하고,
요일/시간대별 교통 혼잡 패턴을 시각화하여, 사용자가 최적의 출발 시간을 선택할 수 있도록 돕는 시스템을 개발했습니다.

2. 주요 기능

차량 탐지 및 카운팅 (AI/영상분석)

OpenCV + YOLOv7 Pretrained 모델을 활용해 CCTV 영상에서 차량(자동차, 버스, 트럭, 오토바이 등)을 실시간으로 탐지 및 카운트

데이터 저장 및 API 제공 (백엔드)

Spring Boot 기반 REST API 서버 개발

차량 수와 타임스탬프를 DB(PostgreSQL)에 저장

/traffic/stats API를 통해 CCTV별 시간대/요일별 혼잡도 데이터 제공

대시보드 시각화 (프론트엔드)

React 기반 웹 대시보드 구현

CCTV 영상 출력 및 현재 차량 수 표시

Chart.js를 이용한 요일/시간대별 혼잡도 그래프

향후 Heatmap(지도 기반)으로 CCTV별 혼잡도 시각화 확장 가능

편의 기능 (추가 구현 예정)

출퇴근 시간 추천 기능: 특정 사용자 출발 시간을 입력하면 혼잡이 가장 적은 출발 시각 제안

3. 기술 스택

AI/영상 분석: Python, YOLOv7, OpenCV

백엔드: Java, Spring Boot, Spring Data JPA

DB: PostgreSQL

프론트엔드: React, Chart.js

기타: REST API, GitHub, Docker(개발 환경 통합)

4. 내가 맡은 역할

AI 모듈: YOLOv7 + OpenCV로 차량 탐지 및 카운팅 기능 구현

백엔드 서버: Spring Boot 기반 REST API 설계 및 DB 저장 로직 개발

데이터 연동: Python 모듈에서 차량 수를 API로 전송, DB에 누적 저장되도록 설계

프론트엔드 연동: React 대시보드에서 API 호출 → 통계 데이터 시각화

5. 트러블슈팅 경험

CCTV 스트림이 끊기는 문제 → 예외 처리 및 fallback(샘플 영상 대체) 로직 추가

YOLOv7 추론 속도 문제 → 프레임 샘플링(1초마다 1프레임) 적용해 실시간성 확보

Python ↔ Spring Boot 연동 시 JSON 매핑 오류 → 데이터 포맷 수정 및 API 단위 테스트로 해결

DB 쿼리 성능 개선 → CCTV ID + 시간대 인덱스 추가로 통계 조회 성능 최적화

6. 프로젝트 결과 및 의의

단순 객체 탐지를 넘어서 데이터 저장, 분석, 시각화까지 연결한 End-to-End 시스템 구현

교통 혼잡 데이터를 기반으로 한 실제 서비스 아이디어 제시 (출퇴근 최적 시간 추천)

Java(Spring Boot) 백엔드와 Python AI 모듈을 통합하여 이종 기술을 융합하는 경험 축적

본 프로젝트를 통해 AI 활용 역량뿐 아니라 백엔드 서비스 기획/설계/구현 능력을 동시에 어필 가능

7. 확장 아이디어

날씨/행사 데이터와 교통 패턴 결합 → 혼잡 예측 정확도 향상

지도 기반 실시간 교통 Heatmap 제공

긴급차량(구급차, 소방차) 경로 최적화 서비스로 확장